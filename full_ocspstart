#!/bin/bash

BASE=`dirname $0`
cert_ca_path=$BASE"/cacerts"
cert_db_path=$BASE"/db"
source $BASE/config

if [ ! -f ${cert_ca_path}/${fullca}.crt ]
then
  echo "${cert_ca_path}/${fullca}.crt doesn't exists. Please create it before running this script."
  exit 1
fi

if [ ! -f ${cert_db_path} ]
then
  mkdir -p ${cert_db_path}
fi

if [ ! -f ${cert_ca_path}/ocsp_lab_local.crt ]
then
  openssl genrsa -out ${cert_ca_path}/ocsp_lab_local.key 4096
  openssl req -new -nodes \
  -key ${cert_ca_path}/ocsp_lab_local.key \
  -out ${cert_ca_path}/ocsp_lab_local.csr \
  -subj "/C=AU/O=Local Lab/CN=ocsp.lab.local"

  openssl x509 -req -days $DAYS -sha256 \
  -in ${cert_ca_path}/ocsp_lab_local.csr \
  -out ${cert_ca_path}/ocsp_lab_local.crt \
  -CA ${cert_ca_path}/${fullca}.crt -CAkey ${cert_ca_path}/${fullca}.key \
  -CAcreateserial -CAserial ${cert_db_path}/${fullca}.srl \
  -extensions exts \
  -extfile <(cat \
  <(printf "[ exts ]\n") \
  <(printf "basicConstraints=critical,CA:false\n") \
  <(printf "subjectKeyIdentifier=hash\n") \
  <(printf "authorityKeyIdentifier=keyid,issuer\n") \
  <(printf "keyUsage=critical,digitalSignature\n") \
  <(printf "extendedKeyUsage=critical,OCSPSigning\n") \
  )

  openssl verify -CAfile <(cat ${cert_ca_path}/${fullca}.crt ${cert_ca_path}/${rootca}.crt) ${cert_ca_path}/ocsp_lab_local.crt
fi

openssl ocsp -port 2560 -resp_key_id -resp_no_certs \
-CA ${cert_ca_path}/${fullca}.crt \
-index ${cert_db_path}/${fullca}.idx \
-rkey ${cert_ca_path}/ocsp_lab_local.key \
-rsigner ${cert_ca_path}/ocsp_lab_local.crt \
-nrequest 1
